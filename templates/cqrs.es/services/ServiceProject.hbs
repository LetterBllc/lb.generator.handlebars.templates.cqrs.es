{
  "ConnectionStrings": {
    "Main": "{{#if CustomProperties.MainConnectionString.Value}}{{{CustomProperties.MainConnectionString.Value}}}{{else}}data source=localhost;initial catalog=CQRS.ES.DataStore;User ID=user;Password=changeit;persist security info=False;packet size=4096{{/if}}"
  },
  "EventStoreAddress": "{{#if CustomProperties.EventStoreAddress.Value}}{{{CustomProperties.EventStoreAddress.Value}}}{{else}}localhost{{/if}}",
  "EventStorePort": "{{#if CustomProperties.EventStorePort.Value}}{{{CustomProperties.EventStorePort.Value}}}{{else}}1113{{/if}}",
  "EventStoreUserName": "{{#if CustomProperties.EventStoreUserName.Value}}{{{CustomProperties.EventStoreUserName.Value}}}{{else}}admin{{/if}}",
  "EventStorePassword": "{{#if CustomProperties.EventStorePassword.Value}}{{{CustomProperties.EventStorePassword.Value}}}{{else}}changeit{{/if}}",
  "MessageQueueAddress": "{{#if CustomProperties.MessageQueueAddress.Value}}{{{CustomProperties.MessageQueueAddress.Value}}}{{else}}rabbitmq://localhost{{/if}}",
  "MessageQueueName": "{{#if CustomProperties.MessageQueueName.Value}}{{{CustomProperties.MessageQueueName.Value}}}{{else}}message_queue{{/if}}",
  "MessageQueueUserName": "{{#if CustomProperties.MessageQueueUserName.Value}}{{{CustomProperties.MessageQueueUserName.Value}}}{{else}}admin{{/if}}",
  "MessageQueuePassword": "{{#if CustomProperties.MessageQueuePassword.Value}}{{{CustomProperties.MessageQueuePassword.Value}}}{{else}}changeit{{/if}}",
  //"Log4NetConfigPath": "C:\\Users\\Dustin Lau\\Source\\repos\\\{{Namespace}}\\\{{Namespace}}.Tests\\log4net.config",
  "EnableVerboseLogging": "true",
  "EnableBusLogging": "true" 
}
//[{{Namespace}}.Service/appsettings.debug.json]
//##SPLIT##
{
  "ConnectionStrings": {
    "Main": "{{#if CustomProperties.MainConnectionString.Value}}{{{CustomProperties.MainConnectionString.Value}}}{{else}}data source=localhost;initial catalog=CQRS.ES.DataStore;User ID=user;Password=changeit;persist security info=False;packet size=4096{{/if}}"
  },
  "EventStoreAddress": "{{#if CustomProperties.EventStoreAddress.Value}}{{{CustomProperties.EventStoreAddress.Value}}}{{else}}localhost{{/if}}",
  "EventStorePort": "{{#if CustomProperties.EventStorePort.Value}}{{{CustomProperties.EventStorePort.Value}}}{{else}}1113{{/if}}",
  "EventStoreUserName": "{{#if CustomProperties.EventStoreUserName.Value}}{{{CustomProperties.EventStoreUserName.Value}}}{{else}}admin{{/if}}",
  "EventStorePassword": "{{#if CustomProperties.EventStorePassword.Value}}{{{CustomProperties.EventStorePassword.Value}}}{{else}}changeit{{/if}}",
  "MessageQueueAddress": "{{#if CustomProperties.MessageQueueAddress.Value}}{{{CustomProperties.MessageQueueAddress.Value}}}{{else}}rabbitmq://localhost{{/if}}",
  "MessageQueueName": "{{#if CustomProperties.MessageQueueName.Value}}{{{CustomProperties.MessageQueueName.Value}}}{{else}}message_queue{{/if}}",
  "MessageQueueUserName": "{{#if CustomProperties.MessageQueueUserName.Value}}{{{CustomProperties.MessageQueueUserName.Value}}}{{else}}admin{{/if}}",
  "MessageQueuePassword": "{{#if CustomProperties.MessageQueuePassword.Value}}{{{CustomProperties.MessageQueuePassword.Value}}}{{else}}changeit{{/if}}"

}
//[{{Namespace}}.Service/appsettings.development.json]
//##SPLIT##
{
  "ConnectionStrings": {
    "Main": "{{#if CustomProperties.MainConnectionString.Value}}{{{CustomProperties.MainConnectionString.Value}}}{{else}}data source=localhost;initial catalog=CQRS.ES.DataStore;User ID=user;Password=changeit;persist security info=False;packet size=4096{{/if}}"
  },
  "EventStoreAddress": "{{#if CustomProperties.EventStoreAddress.Value}}{{{CustomProperties.EventStoreAddress.Value}}}{{else}}localhost{{/if}}",
  "EventStorePort": "{{#if CustomProperties.EventStorePort.Value}}{{{CustomProperties.EventStorePort.Value}}}{{else}}1113{{/if}}",
  "EventStoreUserName": "{{#if CustomProperties.EventStoreUserName.Value}}{{{CustomProperties.EventStoreUserName.Value}}}{{else}}admin{{/if}}",
  "EventStorePassword": "{{#if CustomProperties.EventStorePassword.Value}}{{{CustomProperties.EventStorePassword.Value}}}{{else}}changeit{{/if}}",
  "MessageQueueAddress": "{{#if CustomProperties.MessageQueueAddress.Value}}{{{CustomProperties.MessageQueueAddress.Value}}}{{else}}rabbitmq://localhost{{/if}}",
  "MessageQueueName": "{{#if CustomProperties.MessageQueueName.Value}}{{{CustomProperties.MessageQueueName.Value}}}{{else}}message_queue{{/if}}",
  "MessageQueueUserName": "{{#if CustomProperties.MessageQueueUserName.Value}}{{{CustomProperties.MessageQueueUserName.Value}}}{{else}}admin{{/if}}",
  "MessageQueuePassword": "{{#if CustomProperties.MessageQueuePassword.Value}}{{{CustomProperties.MessageQueuePassword.Value}}}{{else}}changeit{{/if}}"

}
//[{{Namespace}}.Service/appsettings.json]
//##SPLIT##
{
  "ConnectionStrings": {
    "Main": "{{#if CustomProperties.MainConnectionString.Value}}{{{CustomProperties.MainConnectionString.Value}}}{{else}}data source=localhost;initial catalog=CQRS.ES.DataStore;User ID=user;Password=changeit;persist security info=False;packet size=4096{{/if}}"
  },
  "EventStoreAddress": "{{#if CustomProperties.EventStoreAddress.Value}}{{{CustomProperties.EventStoreAddress.Value}}}{{else}}localhost{{/if}}",
  "EventStorePort": "{{#if CustomProperties.EventStorePort.Value}}{{{CustomProperties.EventStorePort.Value}}}{{else}}1113{{/if}}",
  "EventStoreUserName": "{{#if CustomProperties.EventStoreUserName.Value}}{{{CustomProperties.EventStoreUserName.Value}}}{{else}}admin{{/if}}",
  "EventStorePassword": "{{#if CustomProperties.EventStorePassword.Value}}{{{CustomProperties.EventStorePassword.Value}}}{{else}}changeit{{/if}}",
  "MessageQueueAddress": "{{#if CustomProperties.MessageQueueAddress.Value}}{{{CustomProperties.MessageQueueAddress.Value}}}{{else}}rabbitmq://localhost{{/if}}",
  "MessageQueueName": "{{#if CustomProperties.MessageQueueName.Value}}{{{CustomProperties.MessageQueueName.Value}}}{{else}}message_queue{{/if}}",
  "MessageQueueUserName": "{{#if CustomProperties.MessageQueueUserName.Value}}{{{CustomProperties.MessageQueueUserName.Value}}}{{else}}admin{{/if}}",
  "MessageQueuePassword": "{{#if CustomProperties.MessageQueuePassword.Value}}{{{CustomProperties.MessageQueuePassword.Value}}}{{else}}changeit{{/if}}"

}
//[{{Namespace}}.Service/appsettings.production.json]
//##SPLIT##
{
  "ConnectionStrings": {
    "Main": "{{#if CustomProperties.MainConnectionString.Value}}{{{CustomProperties.MainConnectionString.Value}}}{{else}}data source=localhost;initial catalog=CQRS.ES.DataStore;User ID=user;Password=changeit;persist security info=False;packet size=4096{{/if}}"
  },
  "EventStoreAddress": "{{#if CustomProperties.EventStoreAddress.Value}}{{{CustomProperties.EventStoreAddress.Value}}}{{else}}localhost{{/if}}",
  "EventStorePort": "{{#if CustomProperties.EventStorePort.Value}}{{{CustomProperties.EventStorePort.Value}}}{{else}}1113{{/if}}",
  "EventStoreUserName": "{{#if CustomProperties.EventStoreUserName.Value}}{{{CustomProperties.EventStoreUserName.Value}}}{{else}}admin{{/if}}",
  "EventStorePassword": "{{#if CustomProperties.EventStorePassword.Value}}{{{CustomProperties.EventStorePassword.Value}}}{{else}}changeit{{/if}}",
  "MessageQueueAddress": "{{#if CustomProperties.MessageQueueAddress.Value}}{{{CustomProperties.MessageQueueAddress.Value}}}{{else}}rabbitmq://localhost{{/if}}",
  "MessageQueueName": "{{#if CustomProperties.MessageQueueName.Value}}{{{CustomProperties.MessageQueueName.Value}}}{{else}}message_queue{{/if}}",
  "MessageQueueUserName": "{{#if CustomProperties.MessageQueueUserName.Value}}{{{CustomProperties.MessageQueueUserName.Value}}}{{else}}admin{{/if}}",
  "MessageQueuePassword": "{{#if CustomProperties.MessageQueuePassword.Value}}{{{CustomProperties.MessageQueuePassword.Value}}}{{else}}changeit{{/if}}"

}
//[{{Namespace}}.Service/appsettings.test.json]
//##SPLIT##
﻿using System;
using EventStore.ClientAPI;
using {{CoreESNamespace}}.Interfaces;
using MassTransit;
using Topshelf;

namespace {{Namespace}}.Service
{
    public class EventConsumerService : ServiceControl
    {
        private readonly ILogger _log;
        private readonly IEventStoreConnection _eventStoreConnection;
        private readonly IBusControl _bus;
        private readonly IEventStore _eventStore;

        public EventConsumerService(IBusControl bus, IEventStoreConnection eventStoreConnection, IEventStore eventStore, ILogger log)
        {
            _bus = bus;
            _eventStoreConnection = eventStoreConnection;
            _eventStore = eventStore;
            _log = log;
        }

        public bool Start(HostControl hostControl)
        {
            _eventStoreConnection.ConnectAsync().Wait();
            _eventStore.ConfigureSubscriptions().Wait();
            _bus.Start();

            return true;
        }

        public bool Stop(HostControl hostControl)
        {
            _bus?.Stop(TimeSpan.FromSeconds(30));
            _eventStoreConnection?.Close();
            _eventStoreConnection?.Dispose();

            return true;
        }
    }
}
//[{{Namespace}}.Service/EventConsumerService.cs]
//##SPLIT##
﻿<?xml version="1.0" encoding="utf-8" ?>
<log4net>
  <appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
    <file value=".\" />
    <datePattern value="yyyy-MM-dd.'txt'"/>
    <staticLogFileName value="false"/>
    <appendToFile value="true"/>
    <rollingStyle value="Date"/>
    <maxSizeRollBackups value="100"/>
    <maximumFileSize value="15MB"/>
    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="%date [%thread] %-5level App  %newline %message %newline %newline"/>
    </layout>
  </appender>
  <appender name="ColoredConsoleAppender" type="log4net.Appender.ManagedColoredConsoleAppender">
    <mapping>
      <level value="DEBUG" />
      <foreColor value="Blue" />
    </mapping>
    <mapping>
      <level value="INFO" />
      <foreColor value="Green" />
    </mapping>
    <mapping>
      <level value="WARN" />
      <foreColor value="Yellow" />
    </mapping>
    <mapping>
      <level value="ERROR" />
      <foreColor value="White" />
      <backColor value="Red" />
    </mapping>
    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
    </layout>
  </appender>
  <root>
    <level value="DEBUG"/>
    <appender-ref ref="ColoredConsoleAppender"/>
    <appender-ref ref="RollingLogFileAppender"/>
  </root>
</log4net>
//[{{Namespace}}.Service/log4net.config]
//##SPLIT##
﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using CommonServiceLocator;
using EventStore.ClientAPI;
using Lamar;
using {{CoreESNamespace}}.Interfaces;
using {{CoreNamespace}}.Shared;
using log4net.Appender;
using MassTransit;
using Topshelf;
using {{Namespace}}.IOC;

namespace {{Namespace}}.Service
{
    class Program
    {
        public static void Main(string[] args)
        {
            Bootstrapper.BootstrapAndSetLocatorProvider(configuration =>
                {
                    configuration.For<EventConsumerService>().Use(context => new EventConsumerService(
                            context.GetInstance<IBusControl>("ReceiveBus"),
                            context.GetInstance<IEventStoreConnection>(),
                            context.GetInstance<IEventStore>(),
                            context.GetInstance<ILogger>()
                        )
                    );
                });

            var log = ServiceLocator.Current.GetInstance<ILogger>();
            var container = ServiceLocator.Current.GetInstance<IContainer>();

            var serviceDescription = ConfigHelper.Get<string>("ServiceDescription", "{{#if CustomProperties.ServiceDescription.Value}}{{{CustomProperties.ServiceDescription.Value}}}{{else}}CQRS/ES - Service{{/if}}");
            var serviceDisplayName = ConfigHelper.Get<string>("ServiceDisplayName", "{{#if CustomProperties.ServiceDisplayName.Value}}{{{CustomProperties.ServiceDisplayName.Value}}}{{else}}CQRS/ES - Framework{{/if}}");
            var serviceName = ConfigHelper.Get<string>("ServiceName", "{{Namespace}}");

            var returnCode = HostFactory.Run(configurator =>
            {
                configurator.UseLog4Net();

                configurator.Service(() => container.GetInstance<EventConsumerService>());

                configurator.RunAsNetworkService();
                configurator.StartAutomatically();
                //configurator.RunAsLocalSystem();
                configurator.SetDescription(serviceDescription);
                configurator.SetDisplayName(serviceDisplayName);
                configurator.SetServiceName(serviceName);
            });

            var exitCode = (int) Convert.ChangeType(returnCode, returnCode.GetTypeCode());
            Environment.ExitCode = exitCode;
        }
    }
}

//[{{Namespace}}.Service/Program.cs]
//##SPLIT##
<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>netcoreapp3.1</TargetFramework>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="CommonServiceLocator" Version="2.0.5" />
    <PackageReference Include="EventStore.Client" Version="5.0.8" />
    <PackageReference Include="Lamar" Version="4.2.1" />
    <PackageReference Include="{{CoreESNamespace}}" Version="2020.4.8.2253" />
    <PackageReference Include="{{CoreESNamespace}}.Interfaces" Version="2020.4.8.2253" />
    <PackageReference Include="{{CoreNamespace}}.IOC" Version="2020.4.8.2252" />
    <PackageReference Include="{{CoreNamespace}}.IOC.Interfaces" Version="2020.4.8.2252" />
    <PackageReference Include="{{CoreNamespace}}.Logging" Version="2020.4.8.2252" />
    <PackageReference Include="{{CoreNamespace}}.Service" Version="2020.4.8.2252" />
    <PackageReference Include="{{CoreNamespace}}.Service.Interfaces" Version="2020.4.8.2252" />
    <PackageReference Include="{{CoreNamespace}}.Shared" Version="2020.4.8.2252" />
    <PackageReference Include="log4net" Version="2.0.8" />
    <PackageReference Include="MassTransit" Version="6.2.4" />
    <PackageReference Include="MassTransit.Lamar" Version="6.2.4" />
    <PackageReference Include="MassTransit.RabbitMQ" Version="6.2.4" />
    <PackageReference Include="Microsoft.Extensions.Logging" Version="3.1.3" />
    <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="3.1.3" />
    <PackageReference Include="Microsoft.Extensions.Logging.Configuration" Version="3.1.3" />
    <PackageReference Include="NewId" Version="3.0.2" />
    <PackageReference Include="Newtonsoft.Json" Version="12.0.3" />
    <PackageReference Include="PetaPoco.Compiled" Version="6.0.441" />
    <PackageReference Include="RabbitMQ.Client" Version="5.1.2" />
    <PackageReference Include="Topshelf" Version="4.2.1" />
    <PackageReference Include="Topshelf.Log4Net" Version="4.2.1" />
    <PackageReference Include="TopShelf.ServiceInstaller" Version="4.2.1" />
    <PackageReference Include="System.Data.SqlClient" Version="4.8.1" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\\{{Namespace}}.Domain\\{{Namespace}}.Domain.csproj" />
    <ProjectReference Include="..\\{{Namespace}}.IOC\\{{Namespace}}.IOC.csproj" />
    <ProjectReference Include="..\\{{Namespace}}.Shared\\{{Namespace}}.Shared.csproj" />
  </ItemGroup>

  <ItemGroup>
    <None Update="appsettings.debug.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="appsettings.development.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="appsettings.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="appsettings.production.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="appsettings.test.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="log4net.config">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

</Project>

//[{{Namespace}}.Service/{{Namespace}}.Service.csproj]